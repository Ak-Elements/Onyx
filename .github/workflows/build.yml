name: build
on:
  push: null
  pull_request: null
  workflow_dispatch: null
  schedule:
    - cron: 0 0 * * *
jobs:
  check_last_commit:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: '${{ steps.should_run.outputs.should_run }}'
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: 'echo ${{ github.sha }}'
      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: '${{ github.event_name == ''schedule'' }}'
        run: |
          test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"
  linux:
    needs: check_last_commit
    if: '${{ needs.check_last_commit.outputs.should_run != ''false'' }}'
    strategy:
      matrix:
        compiler:
          - { pkg: clang, exe: 'clang++', version: 18 }
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install compiler & dependencies
        run: |
          sudo apt update && sudo apt install -y --no-install-recommends ${{ matrix.compiler.pkg }}-${{ matrix.compiler.version }}  \
                  libgtk-3-dev \
              && sudo rm -rf /var/lib/apt/lists/*
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-noble.list http://packages.lunarg.com/vulkan/lunarg-vulkan-noble.list
          sudo apt update && sudo apt install -y --no-install-recommends vulkan-sdk && sudo rm -rf /var/lib/apt/lists/*
      - name: Generate CMake
        env:
          CXX: '${{ matrix.compiler.exe }}-${{ matrix.compiler.version }}'
        run: |
          cmake -B build -G "Ninja Multi-Config" -DONYX_BUILD_EDITOR=ON 
      - name: Compile Debug
        run: |
          cmake --build build --config Debug
      - name: Compile Release
        run: |
          cmake --build build --config Release
